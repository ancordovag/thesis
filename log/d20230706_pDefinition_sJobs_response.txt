Consider the constraint in the following form
    <C1>; <C2>; ...; <Cm> :- <L1>, <L2>, ..., <Ln>. which says that if the conjunction "<L1> and <L2> and ... and <Ln>" is true, 
    then the disjunction of comparisons "<C1> or <C2> or ... or <Cm>" must be true.

    One can also add a restriction that "exactly k of <C1>, <C2>, ..., <Cm> is true" by using the following form
    {<C1>; <C2>; ...; <Cm>}=k :- <L1>, <L2>, ..., <Ln>.

    Given a problem, extract all constraints from the clues in the problem using only the provided constants and predicates. 
    
    Problem:
    
     
                "Against the Grain" offers hand-made wooden furniture at reasonable prices. Each item is made by an in-house employee. Using only the clues that follow, match each item to the employee who
                crafted it, and determine its price and the type of wood used to make it. Remember, as with all grid-based logic puzzles, no option in any category will ever be used more than once.
                1. Bonita’s piece costs $325. 
                2. The item made of poplar costs more than Yvette’s piece.
                3. Tabitha’s item costs 50 dollars less than the piece made of sandalwood.
                4. The $275 item is either the piece made of ash or Yvette’s item.
                

    Constants: 
    
     employee: "Bonita"; "Yvette"; "Tabitha".
                    price: 225; 275; 325.
                    wood_type: "ash"; "poplar"; "sandalwood".    
                
    Predicates:
    
    
                    % The categories in Constants include employee, price, and wood_type. We use different variables E, P, and W to represent employee, price, and wood_type.
                    % We match an employee E with price P and wood type W, where E belongs to employee, P belongs to price, and W belongs to wood_type.
                    match(E, P, W)
                    

    Constraints: 
    
                        % No option in any category will ever be used more than once.
                        {E1=E2; P1=P2; W1=W2}=0 :- match(E1,P1,W1), match(E2,P2,W2), (E1,P1,W1)!=(E2,P2,W2).
                        % 1. Bonita’s piece costs $325. 
                        P=325 :- match(E,P,W), E="Bonita".
                        % 2. The item made of poplar costs more than Yvette’s piece.
                        P1>P2 :- match(E1,P1,W1), match(E2,P2,W2), W1="poplar", E2="Yvette".
                        % 3. Tabitha’s item costs 50 dollars less than the piece made of sandalwood.
                        P1=P2-50 :- match(E1,P1,W1), match(E2,P2,W2), E1="Tabitha", W2="sandalwood".
                        % 4. The $275 item is either the piece made of ash or Yvette’s item.
                        {W="ash"; E="Yvette"}=1 :- match(E,P,W), P=275.
                        

    Problem 3:
    
    qa1_10
    Constants:
    
    object: "A"; "Z"; "H"; "E"; "M".
    
    Predicates:
    
    % The categories in Constants include object. We use different variables O1 and O2 to represent object.
% We define the relation between two objects O1 and O2, where O1 and O2 belong to object.
relation(O1, O2)

    Constraints:
    /n% No option in any category will ever be used more than once.
{O1=O2}=0 :- relation(O1,O2), O1!=O2.